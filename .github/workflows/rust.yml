name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -Dwarnings -Dclippy::all -Dclippy::pedantic

jobs:

  complete:
    if: always()
    needs: [generate, fmt, build, test, publish-dry-run]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: rustup update
    - run: make clean generate
    - shell: 'script --return --quiet --command "bash {0}"'
      run: git diff --exit-code || (echo "Generated Rust code is out-of-date with the XDR .x files.\nRegenerate and test them by running 'make clean generate build test'." && exit 1)

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: cargo fmt --all --check

  build:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
          target: wasm32-unknown-unknown
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        # TODO: Address GitHub Actions concurrency limits and re-enable.
        # - os: macos-latest
        #   target: x86_64-apple-darwin
        # - os: macos-latest
        #   target: aarch64-apple-darwin
        # TODO: Address disk space usage problems and re-enable.
        # - os: windows-latest
        #   target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: rustup target add ${{ matrix.sys.target }}
    - uses: stellar/binaries@v12
      with:
        name: cargo-hack
        version: 0.5.16
    - if: "github.ref_protected"
      run: echo 'CARGO_HACK_ARGS=--feature-powerset' >> $GITHUB_ENV
    - if: "!github.ref_protected"
      run: echo 'CARGO_HACK_ARGS=--feature-powerset --exclude-features default --group-features base64,serde,arbitrary' >> $GITHUB_ENV
    - run: cargo hack clippy $CARGO_HACK_ARGS --target ${{ matrix.sys.target }} --all-targets

  test:
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        # TODO: Address GitHub Actions concurrency limits and re-enable.
        # - os: macos-latest
        #   target: x86_64-apple-darwin
        # TODO: Address disk space usage problems and re-enable.
        # - os: windows-latest
        #   target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.sys.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: rustup target add ${{ matrix.sys.target }}
    - uses: stellar/binaries@v12
      with:
        name: cargo-hack
        version: 0.5.16
    - if: "github.ref_protected"
      run: echo 'CARGO_HACK_ARGS=--feature-powerset' >> $GITHUB_ENV
    - if: "!github.ref_protected"
      run: echo 'CARGO_HACK_ARGS=--feature-powerset --exclude-features default --group-features base64,serde,arbitrary' >> $GITHUB_ENV
    - run: cargo hack test $CARGO_HACK_ARGS

  publish-dry-run:
    if: startsWith(github.head_ref, 'release/')
    strategy:
      matrix:
        sys:
        - os: ubuntu-latest
          target: wasm32-unknown-unknown
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    uses: stellar/actions/.github/workflows/rust-publish-dry-run.yml@main
    with:
      runs-on: ${{ matrix.sys.os }}
      target: ${{ matrix.sys.target }}
