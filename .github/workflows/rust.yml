name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -D warnings

jobs:

  complete:
    if: always()
    needs: [fmt, cargo]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: find . -type f -name '*.rs' -print0 | xargs -I {} -0 rustfmt --check "{}"

  cargo:
    strategy:
      matrix:
        features: ['', 'alloc', 'std']
        profile: [dev, release]
        sys:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - os: macos-latest
          target: x86_64-apple-darwin
        - os: macos-latest
          target: aarch64-apple-darwin
        - os: windows-latest
          target: x86_64-pc-windows-msvc
        target: ['', wasm32-unknown-unknown]
    runs-on: ${{ matrix.sys.os }}
    steps:
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target || matrix.sys.target }}
    - uses: actions/checkout@v3
    - uses: actions/cache@v2
      with:
        path: target/
        key: matrix(${{ join(matrix.*,'|') }})-sys(${{ join(matrix.sys.*,'|') }})-${{ hashFiles('**', '!.git') }}
        restore-keys: matrix(${{ join(matrix.*,'|') }})-sys(${{ join(matrix.sys.*,'|') }})-
    - run: >
        cargo check
        --profile ${{ matrix.profile }}
        --target ${{ matrix.target || matrix.sys.target }}
        --no-default-features
        --features='${{ matrix.features }}'
    - if: matrix.target != 'wasm32-unknown-unknown' && matrix.sys.target != 'aarch64-apple-darwin'
      run: >
        cargo test
        --profile ${{ matrix.profile }}
        --target ${{ matrix.target || matrix.sys.target }}
        --no-default-features
        --features='${{ matrix.features }}'
