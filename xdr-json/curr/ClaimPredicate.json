{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "ClaimPredicate",
  "description": "ClaimPredicate is an XDR Union defines as:\n\n```text union ClaimPredicate switch (ClaimPredicateType type) { case CLAIM_PREDICATE_UNCONDITIONAL: void; case CLAIM_PREDICATE_AND: ClaimPredicate andPredicates<2>; case CLAIM_PREDICATE_OR: ClaimPredicate orPredicates<2>; case CLAIM_PREDICATE_NOT: ClaimPredicate* notPredicate; case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME: int64 absBefore; // Predicate will be true if closeTime < absBefore case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME: int64 relBefore; // Seconds since closeTime of the ledger in which the // ClaimableBalanceEntry was created }; ```",
  "oneOf": [
    {
      "type": "string",
      "enum": [
        "unconditional"
      ]
    },
    {
      "type": "object",
      "required": [
        "and"
      ],
      "properties": {
        "and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimPredicate"
          },
          "maxItems": 2
        }
      }
    },
    {
      "type": "object",
      "required": [
        "or"
      ],
      "properties": {
        "or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimPredicate"
          },
          "maxItems": 2
        }
      }
    },
    {
      "type": "object",
      "required": [
        "not"
      ],
      "properties": {
        "not": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClaimPredicate"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "before_absolute_time"
      ],
      "properties": {
        "before_absolute_time": {
          "type": "string"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "before_relative_time"
      ],
      "properties": {
        "before_relative_time": {
          "type": "string"
        }
      }
    }
  ],
  "properties": {
    "$schema": {
      "type": "string"
    }
  },
  "unevaluatedProperties": false,
  "definitions": {
    "ClaimPredicate": {
      "description": "ClaimPredicate is an XDR Union defines as:\n\n```text union ClaimPredicate switch (ClaimPredicateType type) { case CLAIM_PREDICATE_UNCONDITIONAL: void; case CLAIM_PREDICATE_AND: ClaimPredicate andPredicates<2>; case CLAIM_PREDICATE_OR: ClaimPredicate orPredicates<2>; case CLAIM_PREDICATE_NOT: ClaimPredicate* notPredicate; case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME: int64 absBefore; // Predicate will be true if closeTime < absBefore case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME: int64 relBefore; // Seconds since closeTime of the ledger in which the // ClaimableBalanceEntry was created }; ```",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "unconditional"
          ]
        },
        {
          "type": "object",
          "required": [
            "and"
          ],
          "properties": {
            "and": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClaimPredicate"
              },
              "maxItems": 2
            }
          }
        },
        {
          "type": "object",
          "required": [
            "or"
          ],
          "properties": {
            "or": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClaimPredicate"
              },
              "maxItems": 2
            }
          }
        },
        {
          "type": "object",
          "required": [
            "not"
          ],
          "properties": {
            "not": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ClaimPredicate"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "before_absolute_time"
          ],
          "properties": {
            "before_absolute_time": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "before_relative_time"
          ],
          "properties": {
            "before_relative_time": {
              "type": "string"
            }
          }
        }
      ]
    }
  }
}