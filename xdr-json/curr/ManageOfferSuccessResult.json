{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "ManageOfferSuccessResult",
  "description": "ManageOfferSuccessResult is an XDR Struct defines as:\n\n```text struct ManageOfferSuccessResult { // offers that got claimed while creating this offer ClaimAtom offersClaimed<>;\n\nunion switch (ManageOfferEffect effect) { case MANAGE_OFFER_CREATED: case MANAGE_OFFER_UPDATED: OfferEntry offer; case MANAGE_OFFER_DELETED: void; } offer; }; ```",
  "type": "object",
  "required": [
    "offer",
    "offers_claimed"
  ],
  "properties": {
    "offer": {
      "$ref": "#/definitions/ManageOfferSuccessResultOffer"
    },
    "offers_claimed": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClaimAtom"
      },
      "maxItems": 4294967295
    }
  },
  "definitions": {
    "AccountId": {
      "type": "string"
    },
    "AlphaNum12": {
      "description": "AlphaNum12 is an XDR Struct defines as:\n\n```text struct AlphaNum12 { AssetCode12 assetCode; AccountID issuer; }; ```",
      "type": "object",
      "required": [
        "asset_code",
        "issuer"
      ],
      "properties": {
        "asset_code": {
          "$ref": "#/definitions/AssetCode12"
        },
        "issuer": {
          "$ref": "#/definitions/AccountId"
        }
      }
    },
    "AlphaNum4": {
      "description": "AlphaNum4 is an XDR Struct defines as:\n\n```text struct AlphaNum4 { AssetCode4 assetCode; AccountID issuer; }; ```",
      "type": "object",
      "required": [
        "asset_code",
        "issuer"
      ],
      "properties": {
        "asset_code": {
          "$ref": "#/definitions/AssetCode4"
        },
        "issuer": {
          "$ref": "#/definitions/AccountId"
        }
      }
    },
    "Asset": {
      "description": "Asset is an XDR Union defines as:\n\n```text union Asset switch (AssetType type) { case ASSET_TYPE_NATIVE: // Not credit void;\n\ncase ASSET_TYPE_CREDIT_ALPHANUM4: AlphaNum4 alphaNum4;\n\ncase ASSET_TYPE_CREDIT_ALPHANUM12: AlphaNum12 alphaNum12;\n\n// add other asset types here in the future }; ```",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "native"
          ]
        },
        {
          "type": "object",
          "required": [
            "credit_alphanum4"
          ],
          "properties": {
            "credit_alphanum4": {
              "$ref": "#/definitions/AlphaNum4"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "credit_alphanum12"
          ],
          "properties": {
            "credit_alphanum12": {
              "$ref": "#/definitions/AlphaNum12"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "AssetCode12": {
      "type": "string"
    },
    "AssetCode4": {
      "type": "string"
    },
    "ClaimAtom": {
      "description": "ClaimAtom is an XDR Union defines as:\n\n```text union ClaimAtom switch (ClaimAtomType type) { case CLAIM_ATOM_TYPE_V0: ClaimOfferAtomV0 v0; case CLAIM_ATOM_TYPE_ORDER_BOOK: ClaimOfferAtom orderBook; case CLAIM_ATOM_TYPE_LIQUIDITY_POOL: ClaimLiquidityAtom liquidityPool; }; ```",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "v0"
          ],
          "properties": {
            "v0": {
              "$ref": "#/definitions/ClaimOfferAtomV0"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "order_book"
          ],
          "properties": {
            "order_book": {
              "$ref": "#/definitions/ClaimOfferAtom"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "liquidity_pool"
          ],
          "properties": {
            "liquidity_pool": {
              "$ref": "#/definitions/ClaimLiquidityAtom"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ClaimLiquidityAtom": {
      "description": "ClaimLiquidityAtom is an XDR Struct defines as:\n\n```text struct ClaimLiquidityAtom { PoolID liquidityPoolID;\n\n// amount and asset taken from the pool Asset assetSold; int64 amountSold;\n\n// amount and asset sent to the pool Asset assetBought; int64 amountBought; }; ```",
      "type": "object",
      "required": [
        "amount_bought",
        "amount_sold",
        "asset_bought",
        "asset_sold",
        "liquidity_pool_id"
      ],
      "properties": {
        "amount_bought": {
          "type": "integer",
          "format": "int64"
        },
        "amount_sold": {
          "type": "integer",
          "format": "int64"
        },
        "asset_bought": {
          "$ref": "#/definitions/Asset"
        },
        "asset_sold": {
          "$ref": "#/definitions/Asset"
        },
        "liquidity_pool_id": {
          "$ref": "#/definitions/PoolId"
        }
      }
    },
    "ClaimOfferAtom": {
      "description": "ClaimOfferAtom is an XDR Struct defines as:\n\n```text struct ClaimOfferAtom { // emitted to identify the offer AccountID sellerID; // Account that owns the offer int64 offerID;\n\n// amount and asset taken from the owner Asset assetSold; int64 amountSold;\n\n// amount and asset sent to the owner Asset assetBought; int64 amountBought; }; ```",
      "type": "object",
      "required": [
        "amount_bought",
        "amount_sold",
        "asset_bought",
        "asset_sold",
        "offer_id",
        "seller_id"
      ],
      "properties": {
        "amount_bought": {
          "type": "integer",
          "format": "int64"
        },
        "amount_sold": {
          "type": "integer",
          "format": "int64"
        },
        "asset_bought": {
          "$ref": "#/definitions/Asset"
        },
        "asset_sold": {
          "$ref": "#/definitions/Asset"
        },
        "offer_id": {
          "type": "integer",
          "format": "int64"
        },
        "seller_id": {
          "$ref": "#/definitions/AccountId"
        }
      }
    },
    "ClaimOfferAtomV0": {
      "description": "ClaimOfferAtomV0 is an XDR Struct defines as:\n\n```text struct ClaimOfferAtomV0 { // emitted to identify the offer uint256 sellerEd25519; // Account that owns the offer int64 offerID;\n\n// amount and asset taken from the owner Asset assetSold; int64 amountSold;\n\n// amount and asset sent to the owner Asset assetBought; int64 amountBought; }; ```",
      "type": "object",
      "required": [
        "amount_bought",
        "amount_sold",
        "asset_bought",
        "asset_sold",
        "offer_id",
        "seller_ed25519"
      ],
      "properties": {
        "amount_bought": {
          "type": "integer",
          "format": "int64"
        },
        "amount_sold": {
          "type": "integer",
          "format": "int64"
        },
        "asset_bought": {
          "$ref": "#/definitions/Asset"
        },
        "asset_sold": {
          "$ref": "#/definitions/Asset"
        },
        "offer_id": {
          "type": "integer",
          "format": "int64"
        },
        "seller_ed25519": {
          "type": "string",
          "maxLength": 64,
          "minLength": 64,
          "contentEncoding": "hex",
          "contentMediaType": "application/binary"
        }
      }
    },
    "ManageOfferSuccessResultOffer": {
      "description": "ManageOfferSuccessResultOffer is an XDR NestedUnion defines as:\n\n```text union switch (ManageOfferEffect effect) { case MANAGE_OFFER_CREATED: case MANAGE_OFFER_UPDATED: OfferEntry offer; case MANAGE_OFFER_DELETED: void; } ```",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "deleted"
          ]
        },
        {
          "type": "object",
          "required": [
            "created"
          ],
          "properties": {
            "created": {
              "$ref": "#/definitions/OfferEntry"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "updated"
          ],
          "properties": {
            "updated": {
              "$ref": "#/definitions/OfferEntry"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "OfferEntry": {
      "description": "OfferEntry is an XDR Struct defines as:\n\n```text struct OfferEntry { AccountID sellerID; int64 offerID; Asset selling; // A Asset buying;  // B int64 amount;  // amount of A\n\n/* price for this offer: price of A in terms of B price=AmountB/AmountA=priceNumerator/priceDenominator price is after fees */ Price price; uint32 flags; // see OfferEntryFlags\n\n// reserved for future use union switch (int v) { case 0: void; } ext; }; ```",
      "type": "object",
      "required": [
        "amount",
        "buying",
        "ext",
        "flags",
        "offer_id",
        "price",
        "seller_id",
        "selling"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "buying": {
          "$ref": "#/definitions/Asset"
        },
        "ext": {
          "$ref": "#/definitions/OfferEntryExt"
        },
        "flags": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "offer_id": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "seller_id": {
          "$ref": "#/definitions/AccountId"
        },
        "selling": {
          "$ref": "#/definitions/Asset"
        }
      }
    },
    "OfferEntryExt": {
      "description": "OfferEntryExt is an XDR NestedUnion defines as:\n\n```text union switch (int v) { case 0: void; } ```",
      "type": "string",
      "enum": [
        "v0"
      ]
    },
    "PoolId": {
      "description": "PoolId is an XDR Typedef defines as:\n\n```text typedef Hash PoolID; ```",
      "type": "string",
      "maxLength": 64,
      "minLength": 64,
      "contentEncoding": "hex",
      "contentMediaType": "application/binary"
    },
    "Price": {
      "description": "Price is an XDR Struct defines as:\n\n```text struct Price { int32 n; // numerator int32 d; // denominator }; ```",
      "type": "object",
      "required": [
        "d",
        "n"
      ],
      "properties": {
        "d": {
          "type": "integer",
          "format": "int32"
        },
        "n": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}