{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "Preconditions",
  "description": "Preconditions is an XDR Union defines as:\n\n```text union Preconditions switch (PreconditionType type) { case PRECOND_NONE: void; case PRECOND_TIME: TimeBounds timeBounds; case PRECOND_V2: PreconditionsV2 v2; }; ```",
  "oneOf": [
    {
      "type": "string",
      "enum": [
        "none"
      ]
    },
    {
      "type": "object",
      "required": [
        "time"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/TimeBounds"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "v2"
      ],
      "properties": {
        "v2": {
          "$ref": "#/definitions/PreconditionsV2"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Duration": {
      "description": "Duration is an XDR Typedef defines as:\n\n```text typedef uint64 Duration; ```",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "LedgerBounds": {
      "description": "LedgerBounds is an XDR Struct defines as:\n\n```text struct LedgerBounds { uint32 minLedger; uint32 maxLedger; // 0 here means no maxLedger }; ```",
      "type": "object",
      "required": [
        "max_ledger",
        "min_ledger"
      ],
      "properties": {
        "max_ledger": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "min_ledger": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "PreconditionsV2": {
      "description": "PreconditionsV2 is an XDR Struct defines as:\n\n```text struct PreconditionsV2 { TimeBounds* timeBounds;\n\n// Transaction only valid for ledger numbers n such that // minLedger <= n < maxLedger (if maxLedger == 0, then // only minLedger is checked) LedgerBounds* ledgerBounds;\n\n// If NULL, only valid when sourceAccount's sequence number // is seqNum - 1.  Otherwise, valid when sourceAccount's // sequence number n satisfies minSeqNum <= n < tx.seqNum. // Note that after execution the account's sequence number // is always raised to tx.seqNum, and a transaction is not // valid if tx.seqNum is too high to ensure replay protection. SequenceNumber* minSeqNum;\n\n// For the transaction to be valid, the current ledger time must // be at least minSeqAge greater than sourceAccount's seqTime. Duration minSeqAge;\n\n// For the transaction to be valid, the current ledger number // must be at least minSeqLedgerGap greater than sourceAccount's // seqLedger. uint32 minSeqLedgerGap;\n\n// For the transaction to be valid, there must be a signature // corresponding to every Signer in this array, even if the // signature is not otherwise required by the sourceAccount or // operations. SignerKey extraSigners<2>; }; ```",
      "type": "object",
      "required": [
        "extra_signers",
        "min_seq_age",
        "min_seq_ledger_gap"
      ],
      "properties": {
        "extra_signers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignerKey"
          },
          "maxItems": 2
        },
        "ledger_bounds": {
          "anyOf": [
            {
              "$ref": "#/definitions/LedgerBounds"
            },
            {
              "type": "null"
            }
          ]
        },
        "min_seq_age": {
          "$ref": "#/definitions/Duration"
        },
        "min_seq_ledger_gap": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "min_seq_num": {
          "anyOf": [
            {
              "$ref": "#/definitions/SequenceNumber"
            },
            {
              "type": "null"
            }
          ]
        },
        "time_bounds": {
          "anyOf": [
            {
              "$ref": "#/definitions/TimeBounds"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "SequenceNumber": {
      "description": "SequenceNumber is an XDR Typedef defines as:\n\n```text typedef int64 SequenceNumber; ```",
      "type": "integer",
      "format": "int64"
    },
    "SignerKey": {
      "type": "string"
    },
    "TimeBounds": {
      "description": "TimeBounds is an XDR Struct defines as:\n\n```text struct TimeBounds { TimePoint minTime; TimePoint maxTime; // 0 here means no maxTime }; ```",
      "type": "object",
      "required": [
        "max_time",
        "min_time"
      ],
      "properties": {
        "max_time": {
          "$ref": "#/definitions/TimePoint"
        },
        "min_time": {
          "$ref": "#/definitions/TimePoint"
        }
      }
    },
    "TimePoint": {
      "description": "TimePoint is an XDR Typedef defines as:\n\n```text typedef uint64 TimePoint; ```",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    }
  }
}